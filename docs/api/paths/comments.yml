paths:
  /notes/{id}/comments:
    get:
      tags: [Comments]
      summary: Get comments for a public note
      operationId: getPublicNoteComments
      parameters:
        - in: path
          name: id
          required: true
          description: Note ID (UUIDv4)
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of comments for the note
          content:
            application/json:
              schema:
                $ref: ../components/schemas/comments-list-response.yml
        '404': { $ref: ../components/responses/not-found.yml }
        '422': { $ref: ../components/responses/validation-error.yml }
    post:
      tags: [Comments]
      summary: Create a comment on a public note
      description: |
        Creates a new comment on a public note. Requires authentication.
        Automatically broadcasts the new comment to all connected WebSocket clients.
      operationId: createPublicNoteComment
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Note ID (UUIDv4)
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  minLength: 1
                  maxLength: 1000
                  description: Comment text content
              required: [content]
              additionalProperties: false
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: ../components/schemas/comment-response.yml
        '400': { $ref: ../components/responses/validation-error.yml }
        '401': { $ref: ../components/responses/unauthorized.yml }
        '404': { $ref: ../components/responses/not-found.yml }
        '422': { $ref: ../components/responses/validation-error.yml }
  /me/notes/{id}/comments:
    get:
      tags: [Comments]
      summary: Get comments for my private note
      operationId: getPrivateNoteComments
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Note ID (UUIDv4)
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of comments for the private note
          content:
            application/json:
              schema:
                $ref: ../components/schemas/comments-list-response.yml
        '401': { $ref: ../components/responses/unauthorized.yml }
        '403': { $ref: ../components/responses/forbidden.yml }
        '404': { $ref: ../components/responses/not-found.yml }
        '422': { $ref: ../components/responses/validation-error.yml }
    post:
      tags: [Comments]
      summary: Create a comment on my private note
      description: |
        Creates a new comment on a private note owned by the authenticated user.
        Automatically broadcasts the new comment to all connected WebSocket clients.
      operationId: createPrivateNoteComment
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Note ID (UUIDv4)
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  minLength: 1
                  maxLength: 1000
                  description: Comment text content
              required: [content]
              additionalProperties: false
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: ../components/schemas/comment-response.yml
        '400': { $ref: ../components/responses/validation-error.yml }
        '401': { $ref: ../components/responses/unauthorized.yml }
        '403': { $ref: ../components/responses/forbidden.yml }
        '404': { $ref: ../components/responses/not-found.yml }
        '422': { $ref: ../components/responses/validation-error.yml }